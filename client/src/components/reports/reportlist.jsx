import React, { useEffect, useState } from "react";
import {
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
  Paper,
  Typography,
  CircularProgress,
  Box,
  Button,
  TextField,
} from "@mui/material";
import { Download } from "@mui/icons-material";
import moment from "moment";
import { jsPDF } from "jspdf";
import * as XLSX from "xlsx";
import { fetchReports } from "../../services/reportService";

const ReportsList = () => {
  const [reports, setReports] = useState([]);
  const [loading, setLoading] = useState(true);
  const [searchType, setSearchType] = useState("");
  const [searchDate, setSearchDate] = useState("");

  useEffect(() => {
    const fetchReport = async () => {
      try {
        const data = await fetchReports();
        setReports(data);
      } catch (error) {
        console.error("Error fetching reports:", error);
      } finally {
        setLoading(false);
      }
    };

    fetchReport();
  }, []);

  const filteredReports = reports.filter((report) => {
    return (
      (searchType === "" || report.reportType.toLowerCase().includes(searchType.toLowerCase())) &&
      (searchDate === "" || moment(report.generatedAt).format("YYYY-MM-DD") === searchDate)
    );
  });

  return (
    <Box sx={{ padding: 3 }}>
      <Typography variant="h5" sx={{ fontWeight: "bold", mb: 2 }}>
        ðŸ“Š Reports Dashboard
      </Typography>

      <Box sx={{ display: "flex", gap: 2, mb: 2 }}>
        <TextField
          label="Search by Report Type"
          variant="outlined"
          value={searchType}
          onChange={(e) => setSearchType(e.target.value)}
          fullWidth
        />
        <TextField
          label="Filter by Generated Date"
          type="date"
          InputLabelProps={{ shrink: true }}
          variant="outlined"
          value={searchDate}
          onChange={(e) => setSearchDate(e.target.value)}
        />
      </Box>

      {loading ? (
        <Box display="flex" justifyContent="center">
          <CircularProgress />
        </Box>
      ) : (
        <TableContainer component={Paper} sx={{ boxShadow: 3, borderRadius: 2 }}>
          <Table>
            <TableHead sx={{ backgroundColor: "#1976d2" }}>
              <TableRow>
                <TableCell sx={{ color: "white", fontWeight: "bold" }}>#</TableCell>
                <TableCell sx={{ color: "white", fontWeight: "bold" }}>Report Type</TableCell>
                <TableCell sx={{ color: "white", fontWeight: "bold" }}>Generated By</TableCell>
                <TableCell sx={{ color: "white", fontWeight: "bold" }}>Generated At</TableCell>
                <TableCell sx={{ color: "white", fontWeight: "bold" }}>Actions</TableCell>
              </TableRow>
            </TableHead>
            <TableBody>
              {filteredReports.map((report, index) => (
                <TableRow key={report._id} hover>
                  <TableCell>{index + 1}</TableCell>
                  <TableCell>{report.reportType}</TableCell>
                  <TableCell>{report.generatedBy}</TableCell>
                  <TableCell>{moment(report.generatedAt).format("DD MMM YYYY, hh:mm A")}</TableCell>
                  <TableCell>
                    <Button variant="contained" color="primary" startIcon={<Download />}>
                      PDF
                    </Button>
                    <Button variant="contained" color="secondary" startIcon={<Download />} sx={{ ml: 1 }}>
                      Excel
                    </Button>
                  </TableCell>
                </TableRow>
              ))}
            </TableBody>
          </Table>
        </TableContainer>
      )}
    </Box>
  );
};

export default ReportsList;
